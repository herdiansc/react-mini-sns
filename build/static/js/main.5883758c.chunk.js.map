{"version":3,"sources":["serviceWorker.js","constants.js","reducers.js","store.js","components/ProgressBarComponent.js","actions.js","components/NotificationComponent.js","components/AppComponent.js","components/HomeComponent.js","components/UsersComponent.js","components/UserDetailComponent.js","components/AlbumPhotosComponent.js","components/CommentComponent.js","components/PostDetailComponent.js","index.js"],"names":["Boolean","window","location","hostname","match","API_SERVER_HOST","process","initialState","users","user","albums","photos","posts","post","comments","writeAccessResponseCode","isLoading","rootReducer","state","action","type","payload","store","createStore","applyMiddleware","thunk","ProgressBar","this","props","className","React","Component","ProgressBarComponent","connect","getPostComments","dispatch","fetch","then","result","json","items","Notification","closeNotification","alertHtml","alertType","alertTitle","alertBody","Fragment","role","data-dismiss","aria-label","onClick","handleCloseNotification","NotificationComponent","AppComponent","children","HomeComponent","style","to","Users","isFormShown","getUsers","aria-current","breadcrumb","map","item","i","id","key","name","username","address","street","suite","city","zipcode","phone","email","UsersComponent","UserDetail","isUserFormShown","postBody","postTitle","params","getUserDetail","user_id","getAlbums","getPosts","placeholder","value","onChange","e","handleInputChange","handleShowPostForm","handleSubmitPostForm","isShown","setState","preventDefault","createPost","body","title","userId","target","src","alt","website","showUserText","formCreatePost","album","UserDetailComponent","method","JSON","stringify","headers","response","status","photo","handleShowModal","bind","getAlbumPhotos","album_id","userDetail","Object","keys","length","data-toggle","data-target","url","thumbnailUrl","tabIndex","aria-labelledby","aria-hidden","CommentItem","commentName","createRef","commentBody","commentEmail","modalCommentId","modalCommentName","modalCommentBody","modalCommentEmail","createComment","current","postId","handleShowForm","comment","editComment","data","deleteComment","ref","handleSubmitForm","modalCommentPostId","handleSubmitEditForm","createForm","formComment","toLowerCase","handleShowModalEditComment","handleDeleteComment","modalFormEditComment","CommentItemComponent","PostDetail","isCommentFormShown","loadPost","post_id","getPostDetail","editPost","handleSubmitEditPostForm","deletePost","history","push","handleDeletPost","showPostText","CommentComponent","modalFormEditPost","PostDetailComponent","ReactDOM","render","basename","component","path","exact","AlbumPhotosComponent","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.5883758c.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const API_SERVER_HOST = process.env.REACT_APP_API_SERVER_HOST;\n\nexport const START_FETCHING = 'START_FETCHING';\nexport const SET_PAGE = 'SET_PAGE';\nexport const SET_USERS = 'SET_USERS';\nexport const SET_USER_DETAIL = 'SET_USER_DETAIL';\nexport const SET_ALBUMS = 'SET_ALBUMS';\nexport const SET_PHOTOS = 'SET_PHOTOS';\nexport const SET_POSTS = 'SET_POSTS';\nexport const SET_POST = 'SET_POST';\nexport const SET_COMMENTS = 'SET_COMMENTS';\nexport const SET_WRITE_ACCESS_RESPONSE = 'SET_WRITE_ACCESS_RESPONSE';\n","import {\n\tSET_USERS, SET_USER_DETAIL, SET_ALBUMS, SET_PHOTOS, START_FETCHING, SET_POSTS, SET_POST, SET_COMMENTS,\n\tSET_WRITE_ACCESS_RESPONSE\n} from './constants';\n\nconst initialState = {\n  users: [],\n  user:{},\n  albums:[],\n  photos:[],\n  posts: [],\n  post: {},\n  comments: [],\n  writeAccessResponseCode: 0,\n  isLoading: false\n};\nfunction rootReducer(state = initialState, action) {\n  if (action.type === SET_USERS) {\n  \treturn {\n  \t\t...state,\n  \t\tusers: action.payload,\n  \t\tisLoading: false\n  \t};\n  }\n\n  if (action.type === SET_USER_DETAIL) {\n  \treturn {\n  \t\t...state,\n  \t\tuser: action.payload, \n  \t\tisLoading: false\n  \t};\n  }\n\n  if (action.type === SET_ALBUMS) {\n  \treturn {\n  \t\t...state,\n  \t\talbums: action.payload,\n  \t\tisLoading: false\n  \t};\n  }\n\n  if (action.type === SET_PHOTOS) {\n  \treturn {\n  \t\t...state,\n  \t\tphotos: action.payload,\n  \t\tisLoading: false\n  \t};\n  }\n\n  if (action.type === SET_POSTS) {\n\treturn {\n\t\t...state,\n\t\tposts: action.payload,\n\t\tisLoading: false\n\t};\n}\n\nif (action.type === SET_POST) {\n\treturn {\n\t\t...state,\n\t\tpost: action.payload,\n\t\tisLoading: false\n\t};\n}\n\nif (action.type === SET_COMMENTS) {\n\treturn {\n\t\t...state,\n\t\tcomments: action.payload,\n\t\tisLoading: false\n\t};\n}\n\n  if (action.type === START_FETCHING) {\n  \treturn {\n\t\t...state,\n\t\tisLoading: true\n  \t};\n  }\n\n  if (action.type === SET_WRITE_ACCESS_RESPONSE) {\n  \treturn {\n\t\t...state,\n\t\twriteAccessResponseCode: action.payload,\n\t\tisLoading: false\n  \t};\n  }\n\n  return state;\n}\nexport default rootReducer;","import { createStore, applyMiddleware } from \"redux\";\nimport rootReducer from \"./reducers\";\nimport thunk from \"redux-thunk\";\n\nconst store = createStore(\n  rootReducer,\n  applyMiddleware(thunk)\n);\nexport default store;","import React from 'react';\n\nimport { connect } from \"react-redux\";\n\nconst mapStateToProps = state => {\n    return { isLoading: state.isLoading };\n};\n\nclass ProgressBar extends React.Component {\n    render() {\n        return (\n        \t<div>\n        \t\t{ this.props.isLoading && \n        \t\t\t<div className=\"progress\"><div className=\"indeterminate\"></div></div>\n        \t\t}\n        \t</div>\n        );\n    }\n}\n\nconst ProgressBarComponent = connect(mapStateToProps)(ProgressBar);\nexport default ProgressBarComponent;","import {\n    API_SERVER_HOST,\n    START_FETCHING, SET_USERS, SET_USER_DETAIL, SET_ALBUMS, SET_PHOTOS, SET_POSTS, SET_POST, SET_COMMENTS,\n    SET_WRITE_ACCESS_RESPONSE\n} from './constants';\n\nexport function getUsers() {\n\t// scroll(0,0);\n\treturn dispatch => {\n\t\tdispatch({ type: START_FETCHING });\n        return fetch(`${ API_SERVER_HOST }/users`)\n            .then(result=>result.json())\n            .then(items=> {\n            \tdispatch({ type: SET_USERS, payload: items });\n            });\n  };\n};\n\nexport function getUserDetail(payload) {\n\treturn dispatch => {\n\t\tdispatch({ type: START_FETCHING });\n        return fetch(`${ API_SERVER_HOST }/users/${ payload }`)\n            .then(result=>result.json())\n            .then(item=> {\n            \tdispatch({ type: SET_USER_DETAIL, payload: item });\n            });\n  };\n};\n\nexport function getAlbums(payload) {\n\treturn dispatch => {\n\t\tdispatch({ type: START_FETCHING });\n        return fetch(`${ API_SERVER_HOST }/users/${ payload }/albums`)\n            .then(result=>result.json())\n            .then(items=> {\n            \tdispatch({ type: SET_ALBUMS, payload: items });\n            });\n  };\n};\n\nexport function getPosts(payload) {\n\treturn dispatch => {\n\t\tdispatch({ type: START_FETCHING });\n        return fetch(`${ API_SERVER_HOST }/users/${ payload }/posts`)\n            .then(result=>result.json())\n            .then(items=> {\n            \tdispatch({ type: SET_POSTS, payload: items });\n            });\n  };\n};\n\nexport function getPostDetail(payload) {\n\treturn dispatch => {\n\t\tdispatch({ type: START_FETCHING });\n        return fetch(`${ API_SERVER_HOST }/posts/${ payload }`)\n            .then(result=>result.json())\n            .then(items=> {\n            \tdispatch({ type: SET_POST, payload: items });\n            });\n  };\n};\n\nexport function getPostComments(payload) {\n\treturn dispatch => {\n\t\tdispatch({ type: START_FETCHING });\n        return fetch(`${ API_SERVER_HOST }/posts/${ payload }/comments`)\n            .then(result=>result.json())\n            .then(items=> {\n            \tdispatch({ type: SET_COMMENTS, payload: items });\n            });\n  };\n};\n\nexport function getAlbumPhotos(payload) {\n\treturn dispatch => {\n\t\tdispatch({ type: START_FETCHING });\n        return fetch(`${ API_SERVER_HOST }/photos?albumId=${ payload }`)\n            .then(result=>result.json())\n            .then(items=> {\n            \tdispatch({ type: SET_PHOTOS, payload: items });\n            });\n  };\n};\n\nexport function createPost(payload) {\n    return dispatch => {\n        dispatch({ type: START_FETCHING});\n        return fetch(`${ API_SERVER_HOST }/posts`, {\n                method: 'POST',\n                body: JSON.stringify(payload),\n                headers: {\"Content-type\": \"application/json; charset=UTF-8\"}\n            })\n            .then(response => {\n            \tdispatch({ type: SET_WRITE_ACCESS_RESPONSE, payload: response.status });\n            })\n    }\n}\n\nexport function editPost(payload) {\n    return dispatch => {\n        dispatch({ type: START_FETCHING});\n        return fetch(`${ API_SERVER_HOST }/posts/${payload.postId}`, {\n                method: 'PUT',\n                body: JSON.stringify(payload.data),\n                headers: {\"Content-type\": \"application/json; charset=UTF-8\"}\n            })\n            .then(response => {\n            \tdispatch({ type: SET_WRITE_ACCESS_RESPONSE, payload: response.status });\n            })\n    }\n}\n\nexport function deletePost(payload) {\n    return dispatch => {\n        dispatch({ type: START_FETCHING});\n        return fetch(`${ API_SERVER_HOST }/posts/${payload}`, {\n                method: 'DELETE'\n            })\n            .then(response => {\n            \tdispatch({ type: SET_WRITE_ACCESS_RESPONSE, payload: response.status });\n            })\n    }\n}\n\nexport function createComment(payload) {\n    return dispatch => {\n        dispatch({ type: START_FETCHING});\n        return fetch(`${ API_SERVER_HOST }/comments`, {\n                method: 'POST',\n                body: JSON.stringify(payload),\n                headers: {\"Content-type\": \"application/json; charset=UTF-8\"}\n            })\n            .then(response => {\n                dispatch({ type: SET_WRITE_ACCESS_RESPONSE, payload: response.status });\n            })\n    }\n}\n\nexport function deleteComment(payload) {\n    return dispatch => {\n        dispatch({ type: START_FETCHING});\n        return fetch(`${ API_SERVER_HOST }/comments/${payload}`, {\n                method: 'DELETE'\n            })\n            .then(response => {\n            \tdispatch({ type: SET_WRITE_ACCESS_RESPONSE, payload: response.status });\n            })\n    }\n}\n\nexport function editComment(payload) {\n    return dispatch => {\n        dispatch({ type: START_FETCHING});\n        return fetch(`${ API_SERVER_HOST }/comments/${payload.id}`, {\n                method: 'PUT',\n                body: JSON.stringify(payload.data),\n                headers: {\"Content-type\": \"application/json; charset=UTF-8\"}\n            })\n            .then(response => {\n                dispatch({ type: SET_WRITE_ACCESS_RESPONSE, payload: response.status });\n            })\n    }\n}\n\nexport function closeNotification() {\n    return dispatch => {\n        dispatch({ type: SET_WRITE_ACCESS_RESPONSE, payload: 0 });\n    }\n}","import React from 'react';\nimport { connect } from \"react-redux\";\nimport { closeNotification } from '../actions';\n\nconst mapStateToProps = state => {\n    return { writeAccessResponseCode: state.writeAccessResponseCode };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        closeNotification: () => dispatch(closeNotification())\n    };\n}\n\nclass Notification extends React.Component {\n    handleCloseNotification() {\n        this.props.closeNotification()\n    }\n    render() {\n        let alertHtml, alertType, alertTitle, alertBody;\n        if (this.props.writeAccessResponseCode !== 0) {\n            if (this.props.writeAccessResponseCode === 201 || this.props.writeAccessResponseCode === 200) {\n                alertType = 'alert-success';\n                alertTitle = 'Success';\n                alertBody = (\n                    <React.Fragment>\n                        <p>The operation is successful. However json placeholder is read only, so all non read only access will be mocked up by json placeholder</p>\n                        <p className=\"mb-0\">Thus, the bellow actual content may not be updated.</p>\n                    </React.Fragment>\n                );\n            } else {\n                alertType = 'alert-danger';\n                alertTitle = 'Failed';\n                alertBody = <p>Server responded with code {this.props.writeAccessResponseCode}</p>\n            }\n            alertHtml = (\n                <div className=\"fixed-top\">\n                    <div className=\"container notif-container\">\n                        <div className=\"row\">\n                            <div className=\"col-md-12\">\n                                <div className={`alert ${alertType}`} role=\"alert\">\n                                    <h4 className=\"alert-heading\">{alertTitle}</h4>\n                                    {alertBody}\n                                    <hr />\n                                    <button type=\"button\" className=\"btn btn-sm btn-info mt-4\" data-dismiss=\"alert\" aria-label=\"Close\" onClick={()=>this.handleCloseNotification()}>\n                                        Close\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            )\n        } else {\n            alertHtml = '';\n        }\n        return alertHtml;\n    }\n}\n\nconst NotificationComponent = connect(mapStateToProps, mapDispatchToProps)(Notification);\nexport default NotificationComponent;","import React from 'react';\n\nimport ProgressBarComponent from './ProgressBarComponent.js';\nimport NotificationComponent from './NotificationComponent.js';\n\nexport default class AppComponent extends React.Component {\n    render() {\n        return (\n            <div className=\"container\">\n            \t<ProgressBarComponent />\n                <NotificationComponent />\n                { this.props.children }\n            </div>\n        );\n    }\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nclass HomeComponent extends React.Component {\n    render() {\n        return (\n            <div className=\"search-form-container\">\n                <div className=\"row search-form\" style={{\"display\":\"block\", \"textAlign\":\"center\"}}>\n                    <h1>React Mini SNS</h1>\n                    <hr />\n                    <p>\n                        This is a client app to show built-in json placeholder resources.<br />\n                        Developed using react js and react-redux.\n                    </p>\n                    <Link to={`/user`} className=\"btn bg-kumparan text-white btn-sm\">Explore</Link>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default HomeComponent;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport { getUsers } from '../actions';\n\nconst mapStateToProps = state => {\n    return { users: state.users };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getUsers: () => dispatch(getUsers())\n    };\n}\n\nclass Users extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isFormShown: false\n        };\n    }\n    componentDidMount() {\n        this.props.getUsers();\n    }\n\n    breadcrumb() {\n        return (\n            <nav aria-label=\"breadcrumb\">\n                <ol className=\"breadcrumb\">\n                    <li className=\"breadcrumb-item\"><Link to={`/`}>Home</Link></li>\n                    <li className=\"breadcrumb-item active\" aria-current=\"page\">Users</li>\n                </ol>\n            </nav>\n        )\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                { this.breadcrumb() }\n                <div className=\"row\">\n                    <div className=\"col-md-12\">\n                        <div className=\"albums mt-4 mb-4 pt-4 pb-4\">\n                            <h3 className=\"\">Users</h3>\n                            <div className=\"row\">\n                                <div className=\"col-md-12\">\n                                    <div className=\"list-group\">\n                                        {this.props.users.map((item, i) => {\n                                            return (\n                                                <Link to={`/user/detail/${item.id}`} key={i} className=\"list-group-item list-group-item-action\">\n                                                    <div className=\"d-flex w-100 justify-content-between\">\n                                                        <h5 className=\"mb-1\">{ item.name }</h5>\n                                                        <span className=\"text-lowercase\"><small>@{ item.username }</small></span>\n                                                    </div>\n                                                    <p className=\"mb-1\"><span className=\"font-weight-bolder\">Address:</span> { item.address.street } { item.address.suite } { item.address.city } { item.address.zipcode }</p>\n                                                    <small><span className=\"font-weight-bolder\">Phone:</span> { item.phone }, <span className=\"font-weight-bolder\">Email:</span> <span className=\"text-lowercase\">{ item.email }</span></small>\n                                                </Link>\n                                            )\n                                        })}\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst UsersComponent = connect(mapStateToProps, mapDispatchToProps)(Users);\nexport default UsersComponent;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport { getUserDetail, getAlbums, getPosts, createPost } from '../actions';\n\nconst mapStateToProps = state => {\n    return { user: state.user, albums: state.albums, posts: state.posts };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getUserDetail: payload => dispatch(getUserDetail(payload)),\n        getAlbums: payload => dispatch(getAlbums(payload)),\n        getPosts: payload => dispatch(getPosts(payload)),\n        createPost: payload => dispatch(createPost(payload)),\n    };\n}\n\nclass UserDetail extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isFormShown: false,\n            isUserFormShown: false,\n            postBody: '',\n            postTitle: ''\n        };\n    }\n\n    componentDidMount() {\n        let { match: { params } } = this.props;\n        this.props.getUserDetail(params.user_id);\n        this.props.getAlbums(params.user_id);\n        this.props.getPosts(params.user_id);\n    }\n\n    breadcrumb() {\n        return (\n            <nav aria-label=\"breadcrumb\">\n                <ol className=\"breadcrumb\">\n                    <li className=\"breadcrumb-item\"><Link to={`/`}>Home</Link></li>\n                    <li className=\"breadcrumb-item\"><Link to={`/user`}>Users</Link></li>\n                    <li className=\"breadcrumb-item active\" aria-current=\"page\">{ this.props.user.name }</li>\n                </ol>\n            </nav>\n        )\n    }\n\n    formCreatePost() {\n        if (this.state.isFormShown) {\n            return (\n                <div className=\"row\">\n                    <div className=\"col-md-12\">\n                        <form className=\"border mb-4 mt-4 p-4\">\n                            <div className=\"form-row mb-4\">\n                                <div className=\"col\">\n                                    <textarea className=\"form-control\" placeholder=\"Body\" name=\"postBody\" value={this.state.postBody} onChange={(e) => this.handleInputChange(e)}></textarea>\n                                </div>\n                            </div>\n                            <div className=\"form-row\">\n                                <div className=\"col-sm-8 mb-4\">\n                                    <input type=\"text\" className=\"form-control\" placeholder=\"Title\" value={this.state.postTitle} name=\"postTitle\" onChange={(e) => this.handleInputChange(e)} />\n                                </div>\n                                <div className=\"col-sm-4 mb-4\">\n                                    <div className=\"btn-group float-right\" role=\"group\">\n                                        <button type=\"button\" className=\"btn bg-default border\"  onClick={(e) => this.handleShowPostForm(false, e)}>Cancel</button>\n                                        <button type=\"button\" className=\"btn text-white bg-kumparan\" onClick={(e) => this.handleSubmitPostForm(e)}>Submit</button>\n                                    </div>\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            )\n        }\n    }\n\n    handleShowPostForm(isShown, e) {\n        this.setState({isFormShown: isShown})\n    }\n\n    handleSubmitPostForm(e) {\n        e.preventDefault();\n        this.props.createPost({\n            body: this.state.postBody,\n            title: this.state.postTitle,\n            userId: this.props.user.id\n        }).then(()=>{\n            this.props.getPosts(this.props.user.id);\n        })\n        this.handleShowPostForm(false);\n    }\n\n    handleInputChange(e) {\n        this.setState({[e.target.name]:e.target.value})\n    }\n\n    showUserText() {\n        if (!this.state.isUserFormShown) {\n            return (\n                <div className=\"masthead border text-center pt-4 pb-4\">\n                    <div className=\"container d-flex align-items-center flex-column\">\n                        <img className=\"masthead-avatar mb-5\" src=\"/static/images/avataaars.svg\" alt=\"\" />\n                        <h1 className=\"masthead-heading mb-0\">{ this.props.user.name }</h1>\n                        <p className=\"masthead-subheading font-weight-light mb-0 text-lowercase\">\n                            { this.props.user.phone } - { this.props.user.email } - { this.props.user.website }\n                        </p>\n                    </div>\n                </div>\n            )\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                { this.breadcrumb() }\n                <div className=\"row\">\n                    <div className=\"col-md-12\">\n                        <div className=\"post mt-4 mb-4 pt-4 pb-4\">\n                            <div className=\"row\">\n                                <div className=\"col-md-6\"><h3 className=\"\">User</h3></div>\n                            </div>\n                            { this.showUserText() }\n                        </div>\n\n                        <div className=\"albums mt-4 mb-4 pt-4 pb-4\">\n                            <div className=\"row\">\n                                <div className=\"col\"><h3 className=\"\">Post</h3></div>\n                                <div className=\"col\">\n                                    <button type=\"button\" className=\"btn btn-sm text-white bg-kumparan float-right\" onClick={(e) => { this.handleShowPostForm(true, e)}}>Add</button>\n                                </div>\n                            </div>\n                            \n                            { this.formCreatePost() }\n                            \n                            <div className=\"row\">\n                                <div className=\"col-md-12\">\n                                    <ul className=\"list-group\">\n                                        {this.props.posts.map((post, i) => {\n                                            return (\n                                                <li key={ i } className=\"list-group-item\">\n                                                    <Link to={`/post/detail/${post.id}`}>{ post.title }</Link>\n                                                </li>\n                                            )\n                                        })}\n                                    </ul>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div className=\"albums mt-4 mb-4 pt-4 pb-4\">\n                            <h3 className=\"\">Album</h3>\n                  \n                            <div className=\"row\">\n                                <div className=\"col-md-12\">\n                                    <ul className=\"list-group\">\n                                        {this.props.albums.map((album, i) => {\n                                            return (\n                                                <li key={ i } className=\"list-group-item\">\n                                                    <Link to={`/album/detail/${album.id}`}>{ album.title }</Link>\n                                                </li>\n                                            )\n                                        })}\n                                    </ul>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst UserDetailComponent = connect(mapStateToProps, mapDispatchToProps)(UserDetail);\nexport default UserDetailComponent;","import React from 'react';\nimport { Link } from 'react-router-dom'; \nimport { connect } from \"react-redux\";\nimport { getAlbumPhotos } from '../actions';\n\nconst mapStateToProps = state => {\n    return { photos: state.photos, user: state.user };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getAlbumPhotos: payload => dispatch(getAlbumPhotos(payload))\n    };\n}\n\nclass Users extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {photo: {}};\n\n        this.handleShowModal = this.handleShowModal.bind(this);\n      }\n\n    componentDidMount() {\n        let { match: { params } } = this.props;\n        this.props.getAlbumPhotos(params.album_id);\n    }\n\n    handleShowModal(photo, e) {\n        e.preventDefault();\n        this.setState({photo: photo});\n    }\n\n    breadcrumb() {\n        let userDetail\n        if (Object.keys(this.props.user).length > 0) {\n            userDetail = <li className=\"breadcrumb-item\"><Link to={`/user/detail/${ this.props.user.id }`}>{ this.props.user.name }</Link></li>\n        }\n\n        return (\n            <nav aria-label=\"breadcrumb\">\n            <ol className=\"breadcrumb\">\n                <li className=\"breadcrumb-item\"><Link to={`/`}>Home</Link></li>\n                <li className=\"breadcrumb-item\"><Link to={`/user`}>Users</Link></li>\n                { userDetail }\n                <li className=\"breadcrumb-item active\" aria-current=\"page\">Photos</li>\n            </ol>\n        </nav>\n        )\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                { this.breadcrumb() }\n                <div className=\"row\">\n                    <div className=\"col-md-12 py-5 mb-4\">\n                        <h3 className=\"\">Photos</h3>\n                    </div>\n                </div>\n\n                <div className=\"container\">\n                    <div className=\"row\">\n                        {this.props.photos.map((photo, i) => {\n                            return (\n                                <div key={i} className=\"col-xl-3 col-md-6 mb-4\">\n                                    <div className=\"card border-0 shadow\">\n                                        <Link to=\"\" className=\"photo\" data-toggle=\"modal\" data-target=\"#exampleModal\" onClick={(e) => this.handleShowModal(photo, e)}>\n                                            <input className=\"photo-url\" value={photo.url} type=\"hidden\" /> \n                                            <img src={ photo.thumbnailUrl } className=\"card-img-top\" alt=\"...\" />\n                                        </Link>\n                                    </div>\n                                </div>\n                            )\n                        })}\n                    </div>\n                </div>\n\n                <div className=\"modal fade\" id=\"exampleModal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                    <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\n                        <div className=\"modal-content\">\n                            <img src={this.state.photo.url} className=\"card-img-top\" alt=\"...\" />\n                            <div className=\"container\">\n                                <div className=\"row pt-4 pb-4\">\n                                    <div className=\"col-md-12\">\n                                        { this.state.photo.title }\n                                    </div>\n                                </div>\n                                <div className=\"modal-footer\">\n                                    <button type=\"button\" className=\"btn btn-primary\" data-dismiss=\"modal\">Close</button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst UsersComponent = connect(mapStateToProps, mapDispatchToProps)(Users);\nexport default UsersComponent;","import React from 'react';\nimport { connect } from \"react-redux\";\nimport { editComment, getPostComments, createComment, deleteComment } from '../actions';\n\nconst mapStateToProps = state => {\n    return { comments: state.comments, post: state.post };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getPostComments: payload => dispatch(getPostComments(payload)),\n        editComment: (payload) => dispatch(editComment(payload)),\n        createComment: payload => dispatch(createComment(payload)),\n        deleteComment: payload => dispatch(deleteComment(payload))\n    };\n}\n\nclass CommentItem extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isFormShown: false\n        };\n\n        this.commentName = React.createRef();\n        this.commentBody = React.createRef();\n        this.commentEmail = React.createRef();\n\n        this.modalCommentId = React.createRef();\n        this.modalCommentName = React.createRef();\n        this.modalCommentBody = React.createRef();\n        this.modalCommentEmail = React.createRef();\n    }\n\n    handleShowForm(isShown) {\n        this.setState({isFormShown: isShown})\n    }\n\n    handleSubmitForm() {\n        this.props.createComment({\n            name: this.commentName.current.value,\n            body: this.commentBody.current.value,\n            email: this.commentEmail.current.value,\n            postId: this.props.post.id\n        }).then(()=>{\n            this.props.getPostComments(this.props.post.id);\n        });\n        this.handleShowForm(false);\n    }\n\n    handleShowModalEditComment(comment) {\n        this.modalCommentId.current.value = comment.id;\n        this.modalCommentName.current.value = comment.name;\n        this.modalCommentBody.current.value = comment.body;\n        this.modalCommentEmail.current.value = comment.email;\n    }\n\n    handleSubmitEditForm() {\n        this.props.editComment({\n            id: this.modalCommentId.current.value,\n            data: {\n                postId: this.props.post.id,\n                name: this.modalCommentName.current.value,\n                body: this.modalCommentBody.current.value,\n                email: this.modalCommentEmail.current.value\n            }\n        }).then(()=>{\n            this.props.getPostComments(this.props.post.id)\n        })\n    }\n\n    handleDeleteComment(id) {\n        this.props.deleteComment(id).then(()=>{\n            this.props.getPostComments(this.props.post.id)\n        });\n    }\n\n    formComment() {\n        return (\n            <div className=\"row\">\n                <div className=\"col-md-12\">\n                    <form className=\"border mb-4 mt-4 p-4\">\n                        <div className=\"form-row mb-4\">\n                            <div className=\"col\">\n                                <input type=\"text\" className=\"form-control\" placeholder=\"Name\" ref={this.commentName} />\n                            </div>\n                        </div>\n                        <div className=\"form-row mb-4\">\n                            <div className=\"col\">\n                                <textarea className=\"form-control\" placeholder=\"Body\" ref={this.commentBody}></textarea>\n                            </div>\n                        </div>\n                        <div className=\"form-row mb-4\">\n                            <div className=\"col\">\n                                <input type=\"text\" className=\"form-control\" placeholder=\"Email\" ref={this.commentEmail} />\n                            </div>\n                        </div>\n                        <div className=\"form-row\">\n                            <div className=\"col\">\n                                <div className=\"btn-group float-right\" role=\"group\">\n                                    <button type=\"button\" className=\"btn bg-default border\"  onClick={() => this.handleShowForm(false)}>Cancel</button>\n                                    <button type=\"button\" className=\"btn text-white bg-kumparan\" onClick={(e) => this.handleSubmitForm(e)}>Submit</button>\n                                </div>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        )\n    }\n\n    modalFormEditComment() {\n        return (\n            <div className=\"modal fade\" id=\"exampleModal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\n                    <div className=\"modal-content\">\n                        <form className=\"p-4\">\n                            <input type=\"hidden\" ref={this.modalCommentPostId} />\n                            <input type=\"hidden\" ref={this.modalCommentId} />\n                            <div className=\"form-row mb-4\">\n                                <div className=\"col\">\n                                    <label>Name</label>\n                                    <input type=\"text\" className=\"form-control\" placeholder=\"Name\" ref={this.modalCommentName} />\n                                </div>\n                            </div>\n                            <div className=\"form-row mb-4\">\n                                <div className=\"col\">\n                                    <label>Body</label>\n                                    <textarea className=\"form-control\" placeholder=\"Body\" ref={this.modalCommentBody}></textarea>\n                                </div>\n                            </div>\n                            <div className=\"form-row mb-4\">\n                                <div className=\"col\">\n                                    <label>Email</label>\n                                    <input type=\"text\" className=\"form-control text-lowercase\" placeholder=\"Email\" ref={this.modalCommentEmail} />\n                                </div>\n                            </div>\n                        </form>\n                        <div className=\"modal-footer\">\n                            <button type=\"button\" className=\"btn bg-default border\" data-dismiss=\"modal\">Cancel</button>\n                            <button type=\"button\" className=\"btn text-white bg-kumparan\" data-dismiss=\"modal\" onClick={(e) => this.handleSubmitEditForm(e)}>Submit</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n    \n    render() {\n        let createForm = this.state.isFormShown ? this.formComment() : '';\n    \treturn (\n            <div className=\"albums mt-4 mb-4 pt-4 pb-4\">\n                <div className=\"row\">\n                    <div className=\"col\"><h3 className=\"\">Comments</h3></div>\n                    <div className=\"col\">\n                        <button type=\"button\" className=\"btn btn-sm text-white bg-kumparan float-right\" onClick={() => { this.handleShowForm(true)}}>Add</button>\n                    </div>\n                </div>\n\n                { createForm }\n\n                <div className=\"row\">\n                    <div className=\"col-md-12\">\n                        <div className=\"list-group\">\n                            {this.props.comments.map((comment, i) => {\n                                return (\n                                    <div key={i} className=\"list-group-item list-group-item-action\">\n                                        <div className=\"d-flex w-100 justify-content-between\">\n                                            <h5 className=\"mb-1\"><span className=\"comment-name\">{ comment.name }</span></h5>\n                                            <span className=\"text-lowercase\"><small>{ comment.email.toLowerCase() }</small></span>\n                                        </div>\n                                        <p className=\"mb-1\">{ comment.body }</p>\n                                        <div className=\"btn-group\" role=\"group\">\n                                            <button type=\"button\" className=\"comment-action-btn btn btn-sm text-white bg-kumparan\" data-toggle=\"modal\" data-target=\"#exampleModal\" onClick={() => this.handleShowModalEditComment(comment)}>Edit</button>\n                                            <button type=\"button\" className=\"comment-action-btn btn btn-sm btn-danger\"  onClick={() => this.handleDeleteComment(comment.id)}>Delete</button>\n                                        </div>\n                                    </div>\n                                )\n                            })}\n                        </div>\n                    </div>\n                </div>\n\n                {this.modalFormEditComment()}\n\n            </div>\n    \t)\n    }\n}\n\nconst CommentItemComponent = connect(mapStateToProps, mapDispatchToProps)(CommentItem);\nexport default CommentItemComponent;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport { getPostDetail, getPostComments, editPost, deletePost } from '../actions';\nimport NotificationComponent from './NotificationComponent.js'\nimport CommentComponent from './CommentComponent.js'\n\nconst mapStateToProps = state => {\n    return { post: state.post, comments: state.comments, user: state.user };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getPostDetail: payload => dispatch(getPostDetail(payload)),\n        editPost: payload => dispatch(editPost(payload)),\n        deletePost: payload => dispatch(deletePost(payload)),\n        getPostComments: payload => dispatch(getPostComments(payload))\n    };\n}\n\nclass PostDetail extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isCommentFormShown: false\n        };\n\n        this.postBody = React.createRef();\n        this.postTitle = React.createRef();\n    }\n\n    componentDidMount() {\n        let { match: { params } } = this.props;\n        this.loadPost(params.post_id);\n        this.props.getPostComments(params.post_id);\n    }\n\n    loadPost(id) {\n        this.props.getPostDetail(id).then(()=>{\n            this.postBody.current.value = this.props.post.body;\n            this.postTitle.current.value = this.props.post.title;\n        });\n    }\n\n    breadcrumb() {\n        let name = this.props.user.name || 'User Detail';\n        return (\n            <nav aria-label=\"breadcrumb\">\n            <ol className=\"breadcrumb\">\n                <li className=\"breadcrumb-item\"><Link to={`/`}>Home</Link></li>\n                <li className=\"breadcrumb-item\"><Link to={`/user`}>Users</Link></li>\n                <li className=\"breadcrumb-item\"><Link to={`/user/detail/${ this.props.post.userId }`}>{ name }</Link></li>\n                <li className=\"breadcrumb-item active\" aria-current=\"page\">Post</li>\n            </ol>\n        </nav>\n        )\n    }\n\n    handleSubmitEditPostForm(e) {\n        this.props.editPost({\n            postId: this.props.post.id, \n            data: {\n                body: this.postBody.current.value,\n                title: this.postTitle.current.value,\n                userId: this.props.post.userId\n            }\n        }).then(()=>{\n            this.loadPost(this.props.post.id);\n        });\n    }\n\n    modalFormEditPost() {\n        return (\n            <div className=\"modal fade\" id=\"editPostModal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\n                    <div className=\"modal-content\">\n                        <form className=\"p-4\">\n                            <div className=\"form-row mb-4\">\n                                <div className=\"col\">\n                                    <label>Title</label>\n                                    <input type=\"text\" className=\"form-control\" placeholder=\"Title\" ref={this.postTitle} />\n                                </div>\n                            </div>\n                            <div className=\"form-row mb-4\">\n                                <div className=\"col\">\n                                    <label>Body</label>\n                                    <textarea className=\"form-control\" placeholder=\"Body\" ref={this.postBody}></textarea>\n                                </div>\n                            </div>\n                        </form>\n                        <div className=\"modal-footer\">\n                            <button type=\"button\" className=\"btn bg-default border\" data-dismiss=\"modal\">Cancel</button>\n                            <button type=\"button\" className=\"btn text-white bg-kumparan\" data-dismiss=\"modal\" onClick={(e) => this.handleSubmitEditPostForm(e)}>Submit</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n    showPostText() {\n        return (\n            <div className=\"masthead border pt-4 pb-4\">\n                <div className=\"container d-flex flex-column\">\n                    <h1 className=\"mb-0\">{ this.props.post.title }</h1>\n                    <div className=\"divider-custom divider-light\">\n                        <div className=\"divider-custom-line\"></div>\n                    </div>\n                    <p className=\"masthead-subheading font-weight-light mb-0\">\n                        { this.props.post.body }\n                    </p>\n                </div>\n            </div>\n        )\n    }\n\n    handleDeletPost() {\n        this.props.deletePost(this.props.post.id)\n        .then(()=>{\n            this.props.history.push(\"/user/detail/\"+this.props.post.userId);\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                { this.breadcrumb() }\n                <div className=\"row\">\n                    <div className=\"col-md-12\">\n                        <div className=\"post mt-4 mb-4 pt-4 pb-4\">\n                            <div className=\"row\">\n                                <div className=\"col\"><h3 className=\"\">Post</h3></div>\n                                <div className=\"col\">\n                                    <div className=\"btn-group float-right\" role=\"group\">\n                                        <button type=\"button\" className=\"comment-action-btn btn btn-sm text-white bg-kumparan\" data-toggle=\"modal\" data-target=\"#editPostModal\" >Edit</button>\n                                        <button type=\"button\" className=\"btn btn-sm btn-danger\"  onClick={() => this.handleDeletPost()}>Delete</button>\n                                    </div>\n                                </div>\n                            </div>\n                            <NotificationComponent />\n                            { this.showPostText() }\n                        </div>\n\n                        <CommentComponent />\n\n                    </div>\n                </div>\n                { this.modalFormEditPost() }\n            </div>\n        );\n    }\n}\n\nconst PostDetailComponent = connect(mapStateToProps, mapDispatchToProps)(PostDetail);\nexport default PostDetailComponent;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nimport AppComponent from './components/AppComponent.js';\nimport HomeComponent from './components/HomeComponent.js';\nimport UsersComponent from './components/UsersComponent.js';\nimport UserDetailComponent from './components/UserDetailComponent.js';\nimport AlbumPhotosComponent from './components/AlbumPhotosComponent.js';\nimport PostDetailComponent from './components/PostDetailComponent.js';\n\nReactDOM.render(\n\t<Provider store={store}>\n    <Router basename={process.env.PUBLIC_URL}>\n        <Route component={AppComponent} />\n        <Route path=\"/\" exact component={HomeComponent}/>\n        <Route path=\"/user\" exact component={UsersComponent}/>\n        <Route path=\"/user/detail/:user_id\" component={UserDetailComponent}/>\n        <Route path=\"/album/detail/:album_id\" component={AlbumPhotosComponent}/>\n        <Route path=\"/post/detail/:post_id\" component={PostDetailComponent}/>\n    </Router>\n   </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}